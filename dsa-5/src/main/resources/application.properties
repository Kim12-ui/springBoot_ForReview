spring.application.name=dsa-5

# server설정
server.port=9995
server.servlet.context-path=/web5

# logging level
logging.level.root=info
logging.level.com.dsa.web5=debug

# 1. MySQL 설정
spring.datasource.dbcp2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/springJPA?ServerTimezone=Asia/Seoul
spring.datasource.username=abcd
spring.datasource.password=abcd

# 2. JPA 설정

# (1) JPA가 실행하는 SQL쿼리를 콘솔에 출력하는 설정
spring.jpa.show-sql=true

# (2) DDL(create,alter,drop) 정의시 DB 고유 기능 사용 가능
# - create: 기존 테이블을 삭제하고 새로 생성 [drop+create]
# - create-drop: create 속성에 추가로 애플리케이션을 종료할때 생성한 DDL 제거
# - update: DB테이블과 엔티티 매핑정보를 비교해서 변경 사항만 수정 [테이블 없으면 create]
# - validate: DB테이블과 엔티티 매핑정보를 비교해서 차이가 있으면 경고 후 실행X
# - none: 자동 생성 기능을 사용하지 않음
spring.jpa.hibernate.ddl-auto=update

# (3) Hibernate가 실행하는 SQL 쿼리를 콘솔에 출력
spring.jpa.properties.hibernate.show_sql=true

# (4) 출력되는 SQL 쿼리를 가독성 좋게 포매팅하여 출력
spring.jpa.properties.hibernate.format_sql=true

# (5) MySQL 8을 사용하고 있으므로 해당설정
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# (6) Hibernate의 SQL 유형 로그 레벨을 trace로 설정
logging.level.org.hibernate.type.descriptor.sql=trace

# 업로드 용량 제한: default 1M(1048576)
# 업로드 경로로 지정한 디렉토리는 자동으로 생성됨
spring.servlet.multipart.maxFileSize=100MB
spring.servlet.multipart.maxRequestSize=100MB
spring.servlet.multipart.location=c:/upload

# 게시판 관련 설정
board.pageSize=10
board.linkSize=2
board.uploadPath=c:/upload